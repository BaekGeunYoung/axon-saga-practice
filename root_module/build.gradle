buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.3.72"
    id("org.jetbrains.kotlin.plugin.spring") version "1.3.72"
}

subprojects {
    apply plugin: 'java'
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "org.jetbrains.kotlin.plugin.spring"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.geunyoung'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    // 서브 모듈에 공통으로 의존성을 추가 시킬 디펜던시를 정의합니다.
    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-actuator")
        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
        implementation("io.springfox:springfox-swagger2:2.9.2")
        implementation("io.springfox:springfox-swagger-ui:2.9.2")
        implementation("org.axonframework:axon-spring-boot-starter:4.0.3")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("com.h2database:h2")
    }

    // 해당 task로 서브 모듈 추가시 기초적인 디렉토리를 자동으로 생성해줍니다.
    task initSourceFolders {
        sourceSets*.kotlin.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

project(':core-api') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {

    }
}

project(':shipping-service') {
    dependencies {
        compile project(':core-api')
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':payment-service') {
    dependencies {
        compile project(':core-api')
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':order-service') {
    dependencies {
        compile project(':core-api')
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}